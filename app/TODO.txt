
    to check if the build on f-droid worked: https://f-droid.org/wiki/page/Main_Page
    https://f-droid.org/wiki/page/Category:Apps_with_failing_builds
    
    
    Release checklist:
    - VersionName and VersionCode changed?
    - fastlane descriptions updated?
    - release tested?
    - removed debug output?
    - changelog for the version code written?
    
    
    TODO for android 12:
        [ ] https://developer.android.com/about/versions/12/web-intent-resolution#request-user-associate-app-with-domain
           upon login, request for the user to associate the app with the host used to log in
        [ ] for the meetings activity, set the PiP-Params to setSeamlessResizeEnabled(true);
        [ ] opt-out of stretching for overscroll?
        [ ] https://developer.android.com/about/versions/12/features/splash-screen
            customize the splash screen?
        [ ] app widget updates: https://developer.android.com/about/versions/12/features/widgets
        
    
    
    Roadmap:
        0.5.0:
            [x] option to browse the web version in an activity with a fullscreen WebView
                [x] the overview button doesn't work on-device
                [x] set user agent to mobile
                [x] redirect page loads for pages not on the server to the browser
                [x] allow javascript
                [x] autofill for login form
                [x] back button goes back in history, finishes activity if no history left
                [x] intercept logout, finish activity instead
                [x] add swipe-to-refresh
                [x] for cookie auth, the session cookie is shared
                [x] handle the configuration change for the orientation change myself? no need to reload then, and no white flash while loading
            [x] Forum
                [x] clickable links in posts
            [x] API detection:
                [x] better error message when login fails
                [x] see what routes are needed for what features, tell user on login which features are unavailable
                [x] disable functions according to disabled features
                [x] option to ignore unavailable features, features may partly work if some routes are enabled
                [x] add the option to res-scan for features in the settings screen
                [x] fail without message for features where the routes are disabled
                [x] put the used routes in the Github Readme
            [x] rework UI
                [x] fix settings buttons text color for dark mode
                [x] remove the "Experimental Features" text from the settings, the features work quite reliably
                [x] remove the "developer settings" not used anyways
                [x] try to find nicer colors for dark mode
                [x] space everything more out in general
                [x] courses screen
                    [x] space the icons wider out, make them into 2 rows for each course
                [x] courseware
                    [x] fix the bug that causes the buttons for opencast videos to display incorrectly when in landscape mode
            [x] support for OAuth1 for authentication
                https://oauth1.wp-api.org/docs/basics/Auth-Flow.html
                https://stackoverflow.com/questions/2665796/android-handle-oauth-callback-using-intent-filter
                [x] make a class with the hostnames and OAuth data for supported servers
                [x] extra error message when OAuth isn't supported for the app by a server, tell the user to send a predefined message to the admin,
                    to enable OAuth support for the Stud.IP installation.
                [x] The callback uri doesn't seem to work, the browser doesn't redirect to it. Probably a bug in Stud.IP
                [x] authorize the token via an intent to the browser
                [x] add error dialogs for OAuth login
                [x] add OAuth authentication to the downloads
                [x] add an authentication interceptor for oauth authentication, save the token in the API shared preferences
                [x] check: do things which require a session cookie work with OAuth? Do you get a session cookie when using OAuth?
                    [x] some features might have to be disabled, or only supported via the new JSONAPI, or require the user to log in in the app
                        [x] forum post
                        [x] search for addressees
                        [x] the notifications don't work, because the route used is a dispatch route
                        [x] getting and setting the Stud.IP notification settings also doesn't work
            [x] fully save UI state
                [x] make text selectable, so it can be copied
                [x] save the scrolling position in ScrollViews
                [x] save state for WebViewActivity
                    [x] also save scrolling position. saving x scroll isn't possible
                    [x] save the history
                    [x] add a progress bar
                    [x] is the cookie jar saved?
                [x] save the selected semester in the courses screen
                [x] SavedStateModule for all ViewModels for special data not from the database
                    All objects have to be serializable correctly for this.
                    The limit is 1mb, the CoursewareViewModel could exceed that. In that case, write the data to a file in the cache folder in a lifecycle method
                    , make sure the document provider doesn't delete it on startup, and delete it when it is read.
                    [x] maybe store the opencast und courseware data in the database?
                    [x] MeetingsRoomsViewModel
                    [x] OpencastViewModel
                    [x] CoursewareViewModel
                    [x] FileViewModel
                    [x] ForumViewModel: current parent entry
                    [x] selected semester for courses screen
                    [x] measure the performance after these changes, check if re-creation from an configuration change is still fast
                        https://medium.com/androiddevelopers/testing-app-startup-performance-36169c27ee55
            [x] add shortcuts
                [x] own files
                [x] courses
                [x] messages
                [x] dynamic/pinned shortcuts: specific to the Stud.IP server, have to be removed on logout
                    [x] add options to create these as pinned shortcuts
                    [x] course files: Long press the course name in the files screen
                    [x] specific folder: Long press the course name of "Your files" in the files screen
                    [x] course forum: Long press on the forum icon
                    [x] forum entry: Long press on the entry name (When it is in lost form, not when viewing it)
                    [x] a specific BBB meeting: Long press on the meeting button
                    [x] a specific courseware page: long press on the section
                    [x] a specific page in the mobile view:
            [x] app integration
                [x] open the intent in the main task for the app
                [x] intent filter for sending a message to someone
                [x] same for posting on a forum
                    [x] you can only have one filter per activity for the same intent. make a share activity that gets started, where the user can choose
                        how to share the data
            [x] add a reply button to the message view dialog
            [x] deep links work delayed: the next link gets the data from the previous one. Only in in note app
            [x] bump version
            [x] update help text
                [x] for Cookie auth, the notifications only work as long as the cookie is valid
                [x] for OAuth, several features don't work, including notifications
                [x] also include all other new things
            [x] update description
            [x] write changelog
            [ ] publish on play store
                [x] write privacy policy
                [ ] put the badge on the github readme: https://play.google.com/intl/en_gb/badges/
        1.0.0:
            [ ] add a table of contents to the help screen, with hyperlinks. probably requires using a WebView do use the hyperlinks
            [ ] app integration
                [ ] https://developer.android.com/training/sharing/receive
                    https://developer.android.com/codelabs/android-direct-share
                    Apparently, there is a bug in the android 10 emulator which prevents sharing shortcuts from working
                    [ ] add the last people the user send messages to as persons
            [ ] a way to open multiple tasks for the app, e.g. to view multiple coursewares
            [ ] option to upload multiple files at once
            [ ] option to set the app as the default browser app and set a real browser app.
                All links to Stud.IP will get opened in the app, all other links are relayed to the chosen browser app.
                Only possible way for android < S, because you need ownership of a domain to use app links.
                On android S, you can ask the user to set the app as a standard app for link types.
                    [ ] test the browser app querying on android 11
            [ ] support for viewing Images in Forum Posts: Probably with another ImageHandler for Html.fromHtml
            [ ] deep links improvements
                [ ] support for more link types
                    [x] courseware
                    [x] opencast
                    [x] meetings
                    [x] forum
                    [ ] planner
                    [ ]
                [x] for messages, load the message if it isn't already, and view it
                [ ] link to the course info and member screens
                [ ] link to the planner
                [x] open unknown link patterns in the WebView for the server
            [ ] delete data which is not in a server response, but still in the database
            [ ] better updating of messages, so not every message is downloaded on update, only the ones until a saved one is found
                [ ] don't care about deleting messages deleted from the server, the user can just also delete them locally
                [ ] when a message is deleted, don't sync with the server, just send a delete and delete it from the database
            [ ] add the course info dialog
            [ ] add the course members dialog
            [ ] add the user info dialog
            [ ] support for the planner
            [ ] app widgets
                [ ] planner
                    [ ] updates automatically when the planner is updated in the app
                [ ] messages
                    [ ] button to check for new messages
                    [ ] clicking a message opens it in the app
                [ ] files
                    [ ] save behaviour as the files screen
                    [ ] configuration activity to configure what files will be displayed (own/course)
            [ ] messages
                [ ] add support for viewing the outbox
                [ ] add support for attachments via the "Wysiwyg Uploads" folder, also with share Intents
            [ ] bump version
            [ ] update help text
            [ ] new & more screenshots, with UI improvements
            [ ] update description
            [ ] write changelog
        1.1.0:
            [ ] OAuth
                [ ] add the option for the user to provide a OAuth consumer key and consumer secret, so private installations can enable OAuth
                    for app users without having to integrate the OAuth data into the sourcecode.
            [ ] blubber
                [ ] support for personal chats via blubber
                [ ] option to check for blubber messages more frequently than normal notifications, and to only enable this when connected to wifi
                [ ] support for course blubbers
                [ ] if you invite people to a personal blubber, does it become a group chat?
                [ ] whatsapp-like list for chats, try to emulate a messenger app with blubber
                [ ] intent filter to send a blubber to someone
            [ ] bump version
            [ ] update help text
            [ ] update description
            [ ] write changelog
        1.2.0:
            [ ] add support for JSONAPI (probably requires abstracting away the api routes a bit more)
                https://stackoverflow.com/questions/35502079/custom-converter-for-retrofit-2
                [ ] JSONAPI is enabled on demo.studip.de, use that to test the implementation
                [ ] JSONAPI has a route to get all files/folders for a course, use that for the search function
                [ ] database and everything should still use the data classes, let the JSONAPI format be translated to that
                [ ] JSONAPI to POJO library?
                [ ] use JSONAPI if possible
                [ ] for features only available for JSONAPI, fail gracefully and inform the user, or hide the feature to begin with, or emulate the feature
            [ ] make more specific rules for proguard, so unused code can be removed
            [ ] bump version
            [ ] update help text
            [ ] update description
            [ ] write changelog
        1.3.0:
            [ ] option to input the file size limit of the Stud.IP system, to let the documents provider automatically break up and recombine
                files above the limit, to support arbitrarily large files
            [ ] plugins:
                [ ] vips
                [ ] etherpad
            [ ] bump version
            [ ] update help text
            [ ] update description
            [ ] write changelog
            
        
        
    reduce size:
    https://developer.android.com/topic/performance/reduce-apk-size
    https://medium.com/@kevalpatel2106/how-you-can-decrease-application-size-by-60-in-only-5-minutes-47eff3e7874e
    
    
    
TODO: replace ListViews with RecyclerViews: LayoutManager: LinearLayoutManager, Scrollbar: Vertical
    
    
    
    
TODO

    maybe use Html.fromHtml for messages?
    
    
    
    
    
TODO: open issue with predefined content: https://docs.github.com/en/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters
    
    
    It seems like there is a bug that prevents you from posting on the Forum via the API. Use the dispatch route instead?
    
    
    opencast plugin: https://github.com/elan-ev/studip-opencast-plugin
    License: GPLv2 or later
    
    
    
   
    
    
TODO: use ACTION_CREATE_DOCUMENT do eliminate the storage permission altogether?
    
    
Document provider:
    https://developer.android.com/guide/topics/providers/create-document-provider
    https://medium.com/androiddevelopers/building-a-documentsprovider-f7f2fb38e86a
    Add a setting to load image previews from the provider always/only wifi/never
    
    
TODO: intent filter for sending a message to someone


    
    For the notification service:
    Notifications work over this api with the session cookie: /dispatch.php/jsupdater/get
    caution: just returns an empty list if the session isn't valid
    test whether it works with basic auth: no, only works with a session cookie.
    When using basic auth: add a method to API to refresh the session cookie.
    
    For the mails: presumably all javascript-used routes only work with a session cookie.
    Use the same technique for the route to get users
    
    
    
    
    https://developer.android.com/training/data-storage/room
    https://medium.com/androiddevelopers/7-pro-tips-for-room-fbadea4bfbd1#5e38
    https://developer.android.com/jetpack/guide
    
    
    use paging for large lists:
    https://developer.android.com/topic/libraries/architecture/paging.html
    
    messages: avoid reloading ALL messages, load one at a time and stop when the first cached message is encountered
    
    after logging in, check for available API-routes and tell the user if features aren't available because the provider disabled the API route
    add a settings button to re-perform the check, so the user doesn't have to log out if an API-route is enabled
    
    
    
    
TODO: JSONAPI: https://jsonapi.org/format
    getting only specific fields to save mobile data: https://jsonapi.org/format/#fetching-sparse-fieldsets
    
    

battery saving:
https://developer.android.com/training/efficient-downloads/regular_updates
https://developer.android.com/topic/performance/power




Add the ability to transfer app data to another phone via bluetooth.
A one-time-password is generated and the user has to enter it on the app of the other phone.
A key is derived from this password and all data encrypted with it.
https://developer.android.com/guide/topics/connectivity/bluetooth


IMPORTANT: If LiveData changes while an activity is in the stopped state and then returns to resumed, does it get the update?
https://developer.android.com/topic/libraries/architecture/livedata
Always up to date data
    If a lifecycle becomes inactive, it receives the latest data upon becoming active again.

https://developer.android.com/jetpack/guide#fetching_data
https://developer.android.com/topic/libraries/architecture/viewmodel
https://developer.android.com/reference/androidx/lifecycle/ViewModel
https://developer.android.com/topic/libraries/architecture/livedata


add app widgets for: messages, forums, course news, global news, calendar
https://developer.android.com/guide/topics/appwidgets
https://developer.android.com/guide/topics/appwidgets#preview
https://developer.android.com/guide/topics/appwidgets#fresh
https://developer.android.com/guide/topics/graphics/drawables#nine-patch


    
    
    

    general:
        To make a new icon from a svg, convert it to a png with GIMP and then use it in android studio
    
    plugins:
        plugins don't seem to have a REST api defined, probably because there wasn't an app for so long
        
        make issues on github for the plugins to define REST-APIs:
        https://github.com/virtUOS/courseware/issues
        https://github.com/virtUOS/studip-meeting/issues
        https://github.com/elan-ev/studip-opencast-plugin/issues
        
            
        vips:
            url: /plugins.php/vipsplugin/sheets?cid=
            
        
        
    
    
    
    
    