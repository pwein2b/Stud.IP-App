TODO:
    rework the api to also get session cookies on login, to use in VideoViews and WebViews
    finish the option to only save a session cookie, so the password doesn't have to be stored and make it the default method
    let logout send a logout request to the server with the cookie
    make the cache service a bound service that provides an abstraction over the API class and manages caching the content in a database using Room
        https://developer.android.com/training/data-storage/room
    add a method to try to force loading content from the server, for swipe-to-refresh
    make another service/Job to periodically update the database or parts of it, depending on the battery state, airplane mode, data saving setting, and settings:
    https://developer.android.com/topic/libraries/architecture/workmanager


TODO Use a ViewModel to fix the configuration change bugs once and for all
https://developer.android.com/reference/androidx/lifecycle/ViewModel
https://developer.android.com/topic/libraries/architecture/livedata


https://developer.android.com/guide/components/activities/recents

    TODO publish on f-droid:
        https://f-droid.org/de/docs/Repository_Style_Guide
        https://www.f-droid.org/en/docs/Inclusion_How-To
        Wait for publishing in the submission queue or make a merge request?
        https://www.f-droid.org/en/docs/Submitting_to_F-Droid_Quick_Start_Guide
        and
        https://www.f-droid.org/en/docs/Build_Server_Setup/#optionally-using-qemukvmlibvirt-instead-of-virtualbox
        to use qemu
    
    TODO app links: most Stud.IP servers have a hostname of studip.*
         dynamically add a broadcast receiver which listens for the specific hostname the user is currently logged in as
         https://developer.android.com/reference/android/content/Context#registerReceiver(android.content.BroadcastReceiver,%20android.content.IntentFilter,%20java.lang.String,%20android.os.Handler)
         
    
    
    

    general:
        To make a new icon from a svg, convert it to a png with GIMP and then use it in android studio
        The API also seems to work with session cookies, as it works with them in the browser.
        Fix freezing while refreshing by using a handler that gets called in the UI thread after a request is done.
    
    plugins:
        plugins don't seem to have a REST api defined, probably because there wasn't an app for so long
        
        make issues on github for the plugins to define REST-APIs:
        https://github.com/virtUOS/courseware/issues
        https://github.com/virtUOS/studip-meeting/issues
        https://github.com/elan-ev/studip-opencast-plugin/issues
        
        courseware:
            to get the courseware html for a course: /plugins.php/courseware/courseware?cid=
            cid is the course-id
        opencast:
            to get the opencast html for a course: /plugins.php/opencast/course/index/false?cid=
            cid is the course-id
            page for the individual videos:
            /paella/ui/watch.html?cid=&id=
            id is the video id
            but the video pages use a special opencast video player.
            but the links to the actual files are in the source of the course page near the download button.
            
            Use a VideoView to display the video.
            
            enable PiP-mode when using the opencast plugin, with normal media controls
            
        meetings:
            url: /plugins.php/meetingplugin/index?cid=
            BigBlueButton is already made for mobile use, so a WebView with the session cookie should be enough.
            
            TODO A WebView reloads when the parent is destroyed because of a configuration change. That would result in someone being temporarily kicked out of a meeting when the device is turned.
                 Make the meetings plugin its own activity and disable configuration changes in it.
                ( Or try a custom tab. Maybe the invite link is enough to join a meeting.) No, the session cookie is needed
            
            Enable PiP-Mode when a meeting is displayed and add custom controls to toggle audio, microphone, camera, screen share.
            
            screen capturing for screen share: https://developer.android.com/reference/android/media/projection/MediaProjectionManager
            
        vips:
            url: /plugins.php/vipsplugin/sheets?cid=
            
            
        
        
        maybe use WebViews to display the plugins? or just include a html parser library and filter out the important parts?
        html parsing+VideoView is viable for opencast, as you just need to get the individual video URLs.
        You can set the URI for VideoView, as well as the HTML-headers, so the cookies
        
    
    
    
    
    