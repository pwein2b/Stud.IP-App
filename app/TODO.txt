
    to check if the build on f-droid worked: https://f-droid.org/wiki/page/Main_Page
    https://f-droid.org/wiki/page/Category:Apps_with_failing_builds
    
    
    Release checklist:
    - VersionName and VersionCode changed?
    - fastlane descriptions updated?
    - release tested?
    - removed debug output?
    - changelog for the version code written?
    
    
    TODO for android 12:
        [ ] https://developer.android.com/about/versions/12/web-intent-resolution#request-user-associate-app-with-domain
           upon login, request for the user to associate the app with the host used to log in
        [ ] for the meetings activity, set the PiP-Params to setSeamlessResizeEnabled(true);
        [ ] opt-out of stretching for overscroll?
        [ ] https://developer.android.com/about/versions/12/features/splash-screen
            customize the splash screen?
        [ ] app widget updates: https://developer.android.com/about/versions/12/features/widgets
        
    
    
    Roadmap:
        1.0.0:
            [ ] memory leak when closing the meetings activity?
            [ ] memory management
                [ ] 
            [ ] deep links improvements
                [ ] support for more link types, for courseware, opencast and meetings links
                [ ] for messages, load the message if it isn't already, and view it
                [ ] link to the course info and member screens
                [ ] link to the planner
                [ ] open unknown link patterns in the WebView for the server
            [ ] delete data which is not in a server response, but still in the database
            [ ] better updating of messages, so not every message is downloaded on update, only the ones until a saved one is found
                [ ] don't care about deleting messages deleted from the server, the user can just also delete them locally
                [ ] when a message is deleted, don't sync with the server, just send a delete and delete it from the database
            [ ] add the course info dialog
            [ ] add the course members dialog
            [ ] add the user info dialog
            [ ] support for the planner
            [ ] app widget for the planner
            [ ] support for changing all Stud.IP settings in a dedicated fragment, by sending requests.
            [ ] option to browse the web version in an activity with a fullscreen WebView
                [ ] set user agent to mobile
                [ ] redirect page loads for pages not on the server to the browser
                [ ] allow javascript
            [ ] API detection:
                [x] better error message when login fails
                [ ] if api.php/user failed, try discovery to see if the API is even enabled
                    [ ] if yes, but api.php/user is not enabled, tell the user
                [ ] see what routes are needed for what features, tell user on login which features are unavailable
                [ ] fail without message for features where the routes are disabled
                [ ] put the used routes in the Github Readme
            [ ] rework UI
                [x] remove the "Experimental Features" text from the settings, the features work quite reliably
                [x] remove the "developer settings" not used anyways
                [ ] try to find nicer colors for dark mode
                [x] space everything more out in general
                [x] courses screen
                    [x] space the icons wider out, make them into 2 rows for each course
                [x] courseware
                    [x] fix the bug that causes the buttons for opencast videos to display incorrectly when in landscape mode
            [ ] bump version
            [ ] update help text
            [ ] update description
        1.1.0:
            [ ] support for OAuth1 for authentication
                [ ] test the OAuth flow and requests in a browser first
                [ ] make a class with the hostnames and OAuth data for supported servers
                [ ] extra error message when OAuth isn't supported for the app by a server, tell the user to send a predefined message to the admin,
                    to enable OAuth support for the Stud.IP installation.
                [ ] check: do things which require a session cookie work with OAuth? Do you get a session cookie when using OAuth?
                    [ ] some features might have to be disabled, or only supported via the new JSONAPI, or require the user to log in in the app
            [ ] blubber
                [ ] support for personal chats via blubber
                [ ] option to check for blubber messages more frequently than normal notifications, and to only enable this when connected to wifi
                [ ] support for course blubbers
                [ ] if you invite people to a personal blubber, does it become a group chat?
                [ ] whatsapp-like list for chats, try to emulate a messenger app with blubber
        1.2.0:
            [ ] add support for JSONAPI (probably requires abstracting away the api routes a bit more)
                [ ] database and everything should still use the data classes, let the JSONAPI format be translated to that
                [ ] JSONAPI to POJO library?
                [ ] use JSONAPI if possible
                [ ] for features only available for JSONAPI, fail gracefully and inform the user, or hide the feature to begin with, or emulate the feature
            [ ] make more specific rules for proguard, so unused code can be removed
            [ ] bump version
        1.3.0:
            [ ] option to input the file size limit of the Stud.IP system, to let the documents provider automatically break up and recombine
                files above the limit, to support arbitrarily large files
            [ ] plugins:
                [ ] vips
                [ ] etherpad
            [ ] bump version
            
        
        
    reduce size:
    https://developer.android.com/topic/performance/reduce-apk-size
    https://medium.com/@kevalpatel2106/how-you-can-decrease-application-size-by-60-in-only-5-minutes-47eff3e7874e
    
    
    
TODO: replace ListViews with RecyclerViews: LayoutManager: LinearLayoutManager, Scrollbar: Vertical
    
    
    
    
TODO

    maybe use Html.fromHtml for messages?
    
    
    
    
TODO: supply database migrations for every database change once the app is on f-droid
    
    
TODO: open issue with predefined content: https://docs.github.com/en/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters
    
    
    It seems like there is a bug that prevents you from posting on the Forum via the API. Use the dispatch route instead?
    
    
    opencast plugin: https://github.com/elan-ev/studip-opencast-plugin
    License: GPLv2 or later
    
    
    
   
    
    
TODO: use ACTION_CREATE_DOCUMENT do eliminate the storage permission altogether?
    
    
Document provider:
    https://developer.android.com/guide/topics/providers/create-document-provider
    https://medium.com/androiddevelopers/building-a-documentsprovider-f7f2fb38e86a
    Add a setting to load image previews from the provider always/only wifi/never
    
    
TODO:
    add the studip notification settings to the settings screen, so you can control from the app what notifications you get.
    
    
TODO: intent filter for sending a message to someone


    
    For the notification service:
    Notifications work over this api with the session cookie: /dispatch.php/jsupdater/get
    caution: just returns an empty list if the session isn't valid
    test whether it works with basic auth: no, only works with a session cookie.
    When using basic auth: add a method to API to refresh the session cookie.
    
    For the mails: presumably all javascript-used routes only work with a session cookie.
    Use the same technique for the route to get users
    
    
    
    
    https://developer.android.com/training/data-storage/room
    https://medium.com/androiddevelopers/7-pro-tips-for-room-fbadea4bfbd1#5e38
    https://developer.android.com/jetpack/guide
    
    
    use paging for large lists:
    https://developer.android.com/topic/libraries/architecture/paging.html
    
    messages: avoid reloading ALL messages, load one at a time and stop when the first cached message is encountered
    
    after logging in, check for available API-routes and tell the user if features aren't available because the provider disabled the API route
    add a settings button to re-perform the check, so the user doesn't have to log out if an API-route is enabled
    
    
    
    
TODO: JSONAPI: https://jsonapi.org/format
    getting only specific fields to save mobilde data: https://jsonapi.org/format/#fetching-sparse-fieldsets
    
    

battery saving:
https://developer.android.com/training/efficient-downloads/regular_updates
https://developer.android.com/topic/performance/power




Add the ability to transfer app data to another phone via bluetooth.
A one-time-password is generated and the user has to enter it on the app of the other phone.
A key is derived from this password and all data encrypted with it.
https://developer.android.com/guide/topics/connectivity/bluetooth


IMPORTANT: If LiveData changes while an activity is in the stopped state and then returns to resumed, does it get the update?
https://developer.android.com/topic/libraries/architecture/livedata
Always up to date data
    If a lifecycle becomes inactive, it receives the latest data upon becoming active again.

https://developer.android.com/jetpack/guide#fetching_data
https://developer.android.com/topic/libraries/architecture/viewmodel
https://developer.android.com/reference/androidx/lifecycle/ViewModel
https://developer.android.com/topic/libraries/architecture/livedata


add app widgets for: messages, forums, course news, global news, calendar
https://developer.android.com/guide/topics/appwidgets
https://developer.android.com/guide/topics/appwidgets#preview
https://developer.android.com/guide/topics/appwidgets#fresh
https://developer.android.com/guide/topics/graphics/drawables#nine-patch


    
    
    

    general:
        To make a new icon from a svg, convert it to a png with GIMP and then use it in android studio
    
    plugins:
        plugins don't seem to have a REST api defined, probably because there wasn't an app for so long
        
        make issues on github for the plugins to define REST-APIs:
        https://github.com/virtUOS/courseware/issues
        https://github.com/virtUOS/studip-meeting/issues
        https://github.com/elan-ev/studip-opencast-plugin/issues
        
        courseware:
            to get the courseware html for a course: /plugins.php/courseware/courseware?cid=
            cid is the course-id
            
        meetings:
            url: /plugins.php/meetingplugin/index?cid=
            BigBlueButton is already made for mobile use, so a WebView with the session cookie should be enough.
            
            TODO A WebView reloads when the parent is destroyed because of a configuration change. That would result in someone being temporarily kicked out of a meeting when the device is turned.
                 Make the meetings plugin its own activity and disable configuration changes in it.
                
                use android:keepScreenOn in the layout of the activity
            
            
            
            Enable PiP-Mode when a meeting is displayed and add custom controls to toggle audio, microphone, camera, screen share.
            
            
        vips:
            url: /plugins.php/vipsplugin/sheets?cid=
            
        
        
    
    
    
    
    